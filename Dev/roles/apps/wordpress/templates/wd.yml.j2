apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  ports:
    - port: 80
      name: http
      protocol: TCP
  selector:
    app: wordpress
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
      - image: wordpress:5.8-php7.4
        name: wordpress
        imagePullPolicy: IfNotPresent

        env:
        - name: WORDPRESS_DB_HOST
          value: {{ rds_endpoint }}

        - name: WORDPRESS_DB_PASSWORD
          value: "{{ rds_password }}"

        - name: WORDPRESS_DB_USER
          value: wpmysql

        - name: WORDPRESS_DB_NAME
          value: wpdb

        - name: WORDPRESS_DEBUG
          value: "1"
        resources:
          requests:
            cpu: 0.2

        ports:
        - containerPort: 80
          name: wordpress
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: wordpres-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: wordpress
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-wordpress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: '{{ ingressNginx.domain_record }}'
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: wordpress
            port:
              number: 80